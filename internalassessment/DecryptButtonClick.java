/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package internalassessment;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.*;
import javax.swing.*;
import java.security.Key;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.extractor.XWPFWordExtractor;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.commons.codec.binary.Base64;
import org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException;


/**
 *
 * @author jivitesh's PC
 */
public class DecryptButtonClick extends javax.swing.JFrame {

    /**
     * Creates new form DecryptButtonClick
     */
    public DecryptButtonClick() {
        initComponents();
    }
    public static Key generateKey() throws Exception {
        //secretkeyspec is used to create a scerekey the spec stands for specific meaning u wnat key of what alogirth eg AES,RSA,Des and creates key of thta algorithm
        //it takes a byte array as a parameter and then a start value and end value form eher it should start making the key and where it should end and then type of key it should create
        return new SecretKeySpec(keyValue, "AES");
    }       
    public void close(){
        WindowEvent winClosingEvent= new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(20, 24, 24));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 165, 0), 3));

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 165, 0));
        jLabel2.setText("JSEncrypt");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(70, 130, 180), 3));

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel1.setText("Click Button To Open File Navigator ");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/internalassessment/if_Location_18_1530070.png"))); // NOI18N
        jButton1.setText("Navigator");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/internalassessment/if_Map_-_Location_Solid_Style_18_2216363.png"))); // NOI18N
        jButton1.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/internalassessment/if_Map_-_Location_Solid_Style_18_2216363.png"))); // NOI18N
        jButton1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/internalassessment/if_Map_-_Location_Solid_Style_18_2216363.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        close();
        JOptionPane.showMessageDialog(null,"Please choose an Encrypted Word/.docx type file","Reminder",JOptionPane.INFORMATION_MESSAGE);
         JFileChooser SelectDecryptionFile=new JFileChooser();
                //open dialog mwthod opens the dialog box of JFile choosers
                //the method below required a int parametr here we juts put null
                int Value=SelectDecryptionFile.showOpenDialog(null);
                //the line belwo only shows the directories of the file as we are only working with directories
                //  Select.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                          try{
                    //we need a file input stream with parameter as the file selected by user through Jchooser and file input stream will read the data as bytes
                    //fileinputstream obtains input bytes from a file in a file system. and takes a file input in this case form the JFile chooser
                    ChosenDecryptionFile= new FileInputStream (SelectDecryptionFile.getSelectedFile());
                        } catch (FileNotFoundException frees){
                            
                }
                //the if statemnet below says if the user clicks the open file option in the filechooser the...
                       if(Value==JFileChooser.APPROVE_OPTION && !SelectDecryptionFile.getSelectedFile().getName().endsWith(".docx")){
                           JOptionPane.showMessageDialog(null,"The File "+ SelectDecryptionFile.getSelectedFile()+ " is not a word file,Please choose another file.","Error",JOptionPane.ERROR_MESSAGE);
                   
                    }
                   else{System.out.println("orrect File Chosen");
                }
                /*we could have use fileInputStream here instad of buffred reader but fileinputstraem read one byte at a time and i would like the program to read awhole line
                the buffred reader has an input stream reader as a parametr because to get a file we need an input straem and secondly beacuse we have to cast the fileInputStream objcet
                as a generic reader(input stream readr object) so buffrend reader can understand it
                */
               //input streamreader raeds bytes and turns them in to charactres and chosenfile was in byte format
                 try{    
                DecryptionDocument=new XWPFDocument(ChosenDecryptionFile);
                extractDecrypted= new XWPFWordExtractor(DecryptionDocument);
                DecryptedWords=extractDecrypted.getText();
            }catch(IOException|NotOfficeXmlFileException documents){
            }
            
        
               /* List<XWPFParagraph> FetchParagraph=Document.getParagraphs();
                for(XWPFParagraph para:FetchParagraph){
                    String Paragraph=para.getText();
                }*/
               
               
               
               /* BufferedReader iterator=new BufferedReader(new InputStreamReader(ChosenFile));
                      
                        
                   
                         try{
                        while((ReadLine=iterator.readLine())!=null){
                            //this just adds the cureently read line to a string TextGoingToBeRead 
                            TextGoingToBeRead=TextGoingToBeRead+ReadLine;
                            try{
                            //next it reds the 2nd line,then 3rd etc...
                            ReadLine=iterator.readLine();
                        } catch(Exception oneMoreException){
                        }
                        //increse the count of the line so the same line is not raed everytime
                          
                    }
                     }catch(Exception ko){
                } 
                */
                    
                    try{
                    //belwo we store the key created using the generatekey method which  creats a secret key spec using the byte array we created called KeyValue
                     SecretKey = generateKey();              
                    //the line below creates a cipher of AES type                   
                     //getInstance method takes the type of encryption ans input RSA,AES one can add padding i have not
                     decoder = Cipher.getInstance("AES");                              
                    //the line below intailizes the cipher and tells it to go into encrypt mode (can also be told to go into decrypt mode) 
                    //the 2nd parameter required a key input wheich we stored in variable secret key created by generateKey method
                    decoder.init(Cipher.DECRYPT_MODE, SecretKey);
                    //byte[] encVal = c.doFinal(TextGoingToBeRead.getBytes());
                    //line b                                         
                  /*the do final method enxrpts the data in a single line or multi line operation it requires a byte input i have used getBytes to convert the String in to the byte 
                  and stored itin the byte variable ByteFormat which is an instance variable                
                  */
                  byteval = decoder.doFinal(Base64.decodeBase64(DecryptedWords.getBytes()));
                  //the varible Stringform convers the encrypted byte data in ByteFormat to a string using encode To STring method
                 // decodevalu=Base64.getDecoder().decode(byteval);
                   Strings=new String(byteval);
                   DisplayDecryptedText DDecrypted= new DisplayDecryptedText ();
                   DDecrypted.setVisible(true);
                   DDecrypted.jTextArea1.setText(Strings);                   
                }catch(Exception ErrorsThrown){
                }
               
               // System.out.println(byteval);
               // System.out.println(s);
               
                       
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DecryptButtonClick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new DecryptButtonClick().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    // End of variables declaration//GEN-END:variables
    FileInputStream ChosenFile;
    FileInputStream ChosenDecryptionFile;
    static String filePath,TextGoingToBeRead,ReadLine;
    static int CurrentLineCount;  
    //the line Below Creates a byte the cipher will use for tocreate the key it has 16 characters because we are using 128bit AES encryption
    static  byte[] keyValue = new byte[]{'T', 'h', 'e', 'B', 'e', 's', 't', 'S', 'e', 'c', 'r', 'e', 't', 'K', 'e', 'y'};
    Key SecretKey;
    Cipher encode,decoder;      
    byte[] ByteFormat;
    String StringForm;
    Key newKey;
    byte[] decodeval;
    String finals;
    XWPFDocument Document;
    XWPFParagraph Paragraph;
    XWPFWordExtractor extract,extractDecrypted;
    String Words,DecryptedWords;
    XWPFDocument savedFile;
    XWPFDocument DecryptionDocument;
    FileOutputStream CreatedFile;
    XWPFRun RunningParagraph;
    String DecryptedValue,Strings,setting;
    byte[] byteval;
    byte[] decodevalu;
}

